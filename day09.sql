--PLYAER 테이블에서 각 선수들의 나이 컬럼 추가한 뷰 만들기
CREATE VIEW HOWOLDAREYOU
AS (SELECT P.*,ROUND((SYSDATE-BIRTH_DATE)/365) AGE FROM PLAYER P);
--가상의 테이블이지만 메모리 할당됨
SELECT * FROM HOWOLDAREYOU;

--30살 넘은 선수 검색
SELECT PLAYER_NAME,AGE
FROM HOWOLDAREYOU
WHERE AGE>30
ORDER BY 2;

--닉네임이 NULL인 선수를 모두 '홍길동'으로 변경
UPDATE HOWOLDAREYOU
SET NICKNAME='홍길동'
WHERE NICKNAME=PLAYER_NAME;

UPDATE HOWOLDAREYOU
SET NICKNAME='홍길동'
WHERE NICKNAME IS NULL;
--PLAYER테이블의 값도 바뀜
--주소값을 참조하기 때문에
--이 주소값들을 가지고 와서 뷰를 만들고 이 뷰는 메모리를 할당 받음
SELECT * FROM PLAYER;

--EMPLOYEES 테이블에서 사원이름과 그 사원의 매니저 이름이 있는 VIEW 만들기
--각각(EMP_NAME,MANAGER_NAME으로 별칭 주기)
CREATE VIEW V_EMP
AS (SELECT E1.FIRST_NAME "EMP_NAME", E2.FIRST_NAME "MANAGER_NAME"
FROM EMPLOYEES E1 JOIN EMPLOYEES E2
ON E1.MANAGER_ID=E2.EMPLOYEE_ID);
SELECT * FROM V_EMP;


--만든 계정으로 접속 후 COPY_EMP 테이블에서 COPY_SALGRADE를 이용한 등급별 테이블을 VIEW로 만들고
--GRADE 1이상 2이하인 사원들의 전체정보를 COPY_EMP에서 검색
--USING 사용
CREATE TABLE COPY_EMP AS (SELECT * FROM HR.EMP);
CREATE TABLE COPY_SALGRADE AS (SELECT * FROM HR.SALGRADE);
--위 두문장 cmd(터미널)창에서 실행하기

CREATE VIEW CEMP
AS(SELECT S.GRADE,E.EMPNO,E.ENAME,E.SAL FROM COPY_EMP E JOIN COPY_SALGRADE S
ON E.SAL BETWEEN S.LOSAL AND S.HISAL
GROUP BY  S.GRADE,E.EMPNO, E.ENAME, E.SAL);

SELECT * FROM COPY_EMP E JOIN (SELECT EMPNO FROM CEMP WHERE GRADE BETWEEN 1 AND 2)
USING(EMPNO);

--다시 HR계정으로 돌아오고 쿼리문 실행

--ROLLUP
SELECT NVL(JOB,'총합'),SUM(SAL)
FROM EMP GROUP BY ROLLUP(JOB);

--EMP 테이블과 DEPT테이블에서 DNAME별 JOB의 총합과 DNAME의 총합 검색
SELECT DNAME,JOB,SUM(SAL),COUNT(*)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB);
--두 쿼리문의 차이점 알기
SELECT NVL(JOB,'전체'),NVL(DNAME,'소계'),SUM(SAL),COUNT(*)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(JOB,DNAME);

--EMP테이블과 DEPT테이블에서 DNMAE별 총합과 인원수 그리고 MGR검색
SELECT D.DNAME,E.JOB,E.MGR,SUM(SAL),COUNT(*)
FROM EMP E JOIN DEPT D
ON E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB,MGR);

SELECT D.DNAME,E.JOB,E.MGR,SUM(SAL),COUNT(*)
FROM EMP E, DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,(JOB,MGR));

SELECT DEPT.DNAME,EMP.JOB,SUM(EMP.SAL),COUNT(*) FROM EMP JOIN DEPT
ON EMP.DEPTNO=DEPT.DEPTNO
GROUP BY DNAME,ROLLUP(JOB);


--DNAME별 총합
--JOB별 총합
--DNAME,JOB별 총합
SELECT DEPT.DNAME,EMP.JOB,SUM(EMP.SAL),COUNT(*)
FROM EMP JOIN DEPT
USING(DEPTNO)
GROUP BY CUBE(DNAME,JOB);

SELECT DEPT.DNAME,EMP.JOB,SUM(EMP.SAL),COUNT(*)
FROM EMP JOIN DEPT
USING(DEPTNO)
GROUP BY DNAME,CUBE(JOB);
--ROLLUP과 동일
SELECT DEPT.DNAME,EMP.JOB,SUM(EMP.SAL),COUNT(*)
FROM EMP JOIN DEPT
USING(DEPTNO)
GROUP BY DNAME,ROLLUP(JOB);

--GROUPING
SELECT NVL(JOB,'총합'),SUM(SAL),GROUPING(JOB)
FROM EMP GROUP BY ROLLUP(JOB);

SELECT DNAME,JOB,SUM(SAL),COUNT(*),GROUPING(DNAME),GROUPING(JOB)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB);

SELECT DNAME,JOB,SUM(SAL),COUNT(*),GROUPING(DNAME),GROUPING(JOB)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB)
HAVING GROUPING_ID(DNAME,JOB)=(3);

SELECT DNAME,JOB,SUM(SAL),COUNT(*),GROUPING(DNAME),GROUPING(JOB)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB)
HAVING GROUPING_ID(DNAME,JOB) IN(0,3);

--DECODE
--DECODE(컬럼, 조건1, 결과1,조건2,결과2,.....,다 아닐때의 결과)
SELECT DECODE(DNAME,NULL,'총합',DNAME),JOB,SUM(SAL)
FROM EMP E,DEPT D
WHERE E.DEPTNO=D.DEPTNO
GROUP BY ROLLUP(DNAME,JOB)
HAVING GROUPING_ID(DNAME,JOB) IN(0,3);
