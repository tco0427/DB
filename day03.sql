--AS(ALIAS): 별칭
--SELECT절: AS 뒤에 또는 한 칸 띄우고 작성(컬럼)
--FROM절: 한 칸 띄우고 작성(테이블)
--공백 포함->""

SELECT PLAYER_ID AS "선수 번호", PLAYER_NAME 이름 FROM PLAYER;

--PLAYER 테이블에서 BACK_NO를 "등번호"로, NICKNAME을 "선수 별명"으로 바꿔서 검색

SELECT BACK_NO AS "등번호",NICKNAME AS "선수 별명" FROM PLAYER;

--PALYER 테이블에서 선수이름을, TEAM테이블에서 주소를 검색
SELECT PLAYER_NAME,ADDRESS FROM PLAYER P, TEAM T;
SELECT P.PLAYER_NAME,T.ADDRESS FROM PLAYER P, TEAM T;

--두 테이블의 중복된 컬럼(컬럼 별칭 필수->컬럼명 앞에 어느 테이블의 컬럼인지 명시가능)
SELECT P.TEAM_ID, T.TEAM_ID FROM PLAYER P, TEAM T;

--STADIUM 테이블에서 ADDRESS를 TEAM테이블에서 TEL 검색
SELECT S.ADDRESS AS "경기장 주소", T.TEL 전화번호 FROM STADIUM S,TEAM T;

--CONCATENATION(연결)
SELECT PLAYER_NAME||'별명은'||NICKNAME AS 정보 FROM PLAYER;

--LIKE: 포함된 문자열의 값을 찾음
--%(모듈러스): 모든 것
--'%A': A로 끝나는 모든 값(ex. FDFDFEIA,SDIONA,OI34A)
--'_A': A로 끝나고 두 자리인 값(AA,3A,IA)

SELECT * FROM TEAM
WHERE TEAM_NAME LIKE '%곤즈';

SELECT * FROM PLAYER
WHERE PLAYER_NAME LIKE('김%') AND PLAYER_NAME LIKE ('김_');

--PLAYER 테이블에서 이씨찾기
SELECT * FROM PLAYER
WHERE PLAYER_NAME LIKE('이%');

--PLAYER 테이블에서 김씨와 이씨 찾기
SELECT * FROM PLAYER
WHERE PLAYER_NAME LIKE('김%') OR PLAYER_NAME LIKE('이%');

--PLAYER 테이블에서 김씨가 아닌 사람 찾기(NOT)
SELECT * FROM PLAYER
WHERE PLAYER_NAME NOT LIKE('김%');
--정규 방식
SELECT * FROM PLAYER
WHERE NOT PLAYER_NAME LIKE('김%');

--CASE문(새로운 컬럼으로 조건을 만족시키는 값을 보여줌)
--CASE WHEN THEN ELSE END
--CASE WHEN 조건식 THEN TRUE ELSE FALSE END

--EMP 테이블에서 SAL 3000이상이면 HIGH 1000이상이면 MID 아니면 LOW
SELECT ENAME 사원명,SAL 급여,
	CASE
	WHEN SAL>=3000 THEN 'HIGH'
	WHEN SAL>=1000 THEN 'MID'
	ELSE 'LOW'
	END AS "클라스"
FROM EMP;

--중첩 CASE문(Nested CASE)
--EMP 테이블에서 SAL이 2000이상이면 보너스 1000
--SAL가 1000이상이면 보너스 500
--아니면 0
SELECT ENAME 사원명,SAL 급여,
	CASE
	WHEN SAL>= 2000 THEN 1000
	ELSE(CASE
		WHEN SAL>=1000 THEN 500
		ELSE 0
		END)
	END AS "BONUS"
FROM EMP;

--STADIUM 테이블에서 SEAT_COUNT가 0이상 30000이하면 'S'
--30001이상 50000이하면 'M' 아니면 'L'
SELECT STADIUM_NAME "경기장 이름",SEAT_COUNT 좌석,
	CASE
	WHEN SEAT_COUNT BETWEEN 0 AND 30000 THEN 'S'
	ELSE(CASE
		WHEN (SEAT_COUNT>=30001 AND SEAT_COUNT<=50000) THEN 'M'
		ELSE 'L'
		END)
	END AS "사이즈"
FROM STADIUM;

--PLAYER 테이블에서 WEIGHT가 50이상 70이하면 'L'
--71이상 80이하면 'M' NULL이면(IS NULL) '미등록' 아니면 'H'
--별칭은 '체격'으로 주기
SELECT PLAYER_NAME "선수 이름",WEIGHT||'kg' 몸무게,
	CASE
	WHEN WEIGHT BETWEEN 50 AND 70 THEN 'L'
	ELSE(CASE
		WHEN WEIGHT>=71 AND WEIGHT<=80 THEN 'M'
		WHEN WEIGHT IS NULL THEN '미등록'
		ELSE 'H'
		END)
	END AS "체격"
FROM PLAYER;

--숫자형 함수(FROM DUAL)
--절대값
SELECT ABS(-10) 절댓값 FROM DUAL;

--양의 정수(1),0(0),음의정수(-1)
SELECT SIGN(02),SIGN(0),SIGN(12),SIGN(-1) FROM DUAL;

--나머지%(모듈러스)
SELECT MOD(10,8) AS "나머지" FROM DUAL;

--값보다 큰 최근접 정수
SELECT CEIL(3.14), CEIL(-3.14) FROM DUAL;

--값보다 작은 최근접 정수
SELECT FLOOR(3.14), FLOOR(-3.14) FROM DUAL;

--반올림
SELECT ROUND(3.5515616) FROM DUAL;
SELECT ROUND(3.4515555) FROM DUAL;

--버림
SELECT TRUNC(3.9) FROM DUAL;

--ROUND(값, 자릿수)
--몸무게를 소수점 첫째자리까지 반올림
SELECT ROUND(WEIGHT,2) FROM PLAYER;
SELECT ROUND(10.256,-1) FROM DUAL;
SELECT ROUND(10.256,0) FROM DUAL;
SELECT ROUND(10.256,1) FROM DUAL;

--키는 소수점 둘째자리까지 반올림, 몸무게는 소수점 버림
SELECT ROUND(HEIGHT,2)||'cm' AS 키 FROM PLAYER;
SELECT TRUNC(WEIGHT) FROM PLAYER;

--NULL
CREATE TABLE CAR(
	ID NUMBER(2),
	BRAND VARCHAR2(20),
	COLOR VARCHAR2(10),
	PRICE NUMBER(10),
	--제약조건
	CONSTRAINT CAR_PK PRIMARY KEY(ID)
);
ALTER TABLE CAR MODIFY BRAND NOT NULL;
ALTER TABLE CAR DROP CONSTRAINT SYS_C007286;

SELECT * FROM PLAYER WHERE "POSITION" IS NULL;
SELECT * FROM PLAYER WHERE NOT "POSITION" IS NULL;
SELECT * FROM PLAYER WHERE "POSITION" IS NOT NULL;

--PLAYER 테이블에서 POSITION이 NULL이면 '미정'으로 검색하기
SELECT NVL("POSITION",'미정') FROM PLAYER WHERE "POSITION" IS NULL;
SELECT PLAYER_NAME 선수이름,NVL("POSITION",'미정') 포지션 FROM PLAYER;

--PLAYER 테이블에서 POSITION이 NULL이면 '미정' 있으면 '확정'으로 검색하기
SELECT PLAYER_NAME,NVL2("POSITION",'확정','미정') 포지션 FROM PLAYER;

--PLAYER 테이블에서 NATION이 NULL아니면 등록,NULL이면 미등록 변경 후
--선수이름,국가 검색하기 별칭은 국가 등록 여부로 주기

SELECT PLAYER_NAME "선수 이름",NATION 국가,NVL2(NATION,'등록','미등록') AS "국가 등록 여부" FROM PLAYER;